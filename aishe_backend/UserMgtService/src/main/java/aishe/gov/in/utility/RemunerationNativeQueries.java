package aishe.gov.in.utility;

public interface RemunerationNativeQueries {
    String APPROVAL_LOG = "with rem_approval_log(state_name,instituion_type,form_id,institution_id,institution_name,upload_date,survey_year,form_upload_id,status, timestamp,user_id,ip_address) as (  select s.name as state_name,rut.type as instituion_type,fu.form_id,'U-'||fu.university_id as institution_id,ru.name as institution_name,fu.upload_date,fu.survey_year,rsdtl.form_upload_id, rrsps.name as status, rsdtl.timestamp,rsdtl.user_id,rsdtl.ip_address FROM public.remuneration_statement_approval_log rsdtl Left JOIN public.form_upload fu ON (fu.id=rsdtl.form_upload_id ) LEFT JOIN public.user_master um ON (um.user_id=rsdtl.user_id) LEFT JOIN public.ref_university ru ON (fu.university_id=ru.id and ru.survey_year=fu.survey_year) LEFT JOIN  public.ref_university_type rut ON ru.type_id=rut.id LEFT JOIN public.ref_state s on s.st_code=ru.statecode LEFT JOIN public.ref_remuneration_statement_approval_status rrsps on rrsps.id=rsdtl.status_id where  fu.form_id='form1' and fu.survey_year=:survey_year  and (ru.statecode =:state_code  or 'ALL'=:state_code) and ('University'=:institution_category or 'ALL'=:institution_category) and (cast(rsdtl.timestamp as date)>=:from_date or 'ALL' =:from_date) and (cast(rsdtl.timestamp as date) <=:to_date or 'ALL'=:to_date)  Union All  select s.name as state_name ,ruct.type as instituion_type,fu.form_id,'C-'||fu.college_institution_id as institution_id,clg.name as institution_name,fu.upload_date,fu.survey_year,rsdtl.form_upload_id, rrsps.name as status, rsdtl.timestamp,rsdtl.user_id,rsdtl.ip_address FROM public.remuneration_statement_approval_log rsdtl Left JOIN public.form_upload fu ON (fu.id=rsdtl.form_upload_id ) LEFT JOIN public.user_master um ON (um.user_id=rsdtl.user_id) LEFT JOIN public.college clg ON (fu.college_institution_id=clg.id and clg.survey_year=fu.survey_year) LEFT JOIN  public.ref_university_college_type ruct ON clg.type_id=ruct.id LEFT JOIN public.ref_state s on s.st_code=clg.state_code LEFT JOIN public.ref_remuneration_statement_approval_status rrsps on rrsps.id=rsdtl.status_id where fu.form_id='form2'  and fu.survey_year=:survey_year and (clg.state_code=:state_code  or 'ALL'=:state_code) and ('College Institution'=:institution_category or 'ALL'=:institution_category) and (cast(rsdtl.timestamp as date)>=:from_date or 'ALL'=:from_date) and (cast(rsdtl.timestamp as date) <=:to_date or 'ALL'=:to_date)  Union All  select s.name as state_name,ruct.type as instituion_type,fu.form_id,'S-'||fu.standalone_institution_id as institution_id,rsi.name as institution_name,fu.upload_date,fu.survey_year,rsdtl.form_upload_id, rrsps.name as status, rsdtl.timestamp,rsdtl.user_id,rsdtl.ip_address FROM public.remuneration_statement_approval_log rsdtl Left JOIN public.form_upload fu ON (fu.id=rsdtl.form_upload_id ) LEFT JOIN public.user_master um ON (um.user_id=rsdtl.user_id) LEFT JOIN public.ref_standalone_institution rsi ON (fu.standalone_institution_id=rsi.id and rsi.survey_year=fu.survey_year) LEFT JOIN  public.ref_state_body ruct ON rsi.statebodyid=ruct.id LEFT JOIN public.ref_state s on s.st_code=rsi.statecode LEFT JOIN public.ref_remuneration_statement_approval_status rrsps on rrsps.id=rsdtl.status_id where fu.form_id='form3' and fu.survey_year=:survey_year and  (rsi.statecode=:state_code  or 'ALL'=:state_code) and ('Standalone Institution'=:institution_category or 'ALL'=:institution_category) and (cast(rsdtl.timestamp as date)>=:from_date or 'ALL'=:from_date) and (cast(rsdtl.timestamp as date)<=:to_date or 'ALL'=:to_date) )  select * from rem_approval_log";
    String TRANSACTION_LOG = "with rem_transaction_log(state_name,instituion_type,form_id,institution_id,institution_name,upload_date,survey_year,form_upload_id,status, timestamp,user_id,ip_address) as (  select s.name as state_name,rut.type as instituion_type,fu.form_id,'U-'||fu.university_id as institution_id,ru.name as institution_name,fu.upload_date,fu.survey_year,rsdtl.form_upload_id, rrsps.name as status, rsdtl.timestamp,rsdtl.user_id,rsdtl.ip_address FROM public.remuneration_statement_detail_transaction_log rsdtl Left JOIN public.form_upload fu ON (fu.id=rsdtl.form_upload_id ) LEFT JOIN public.user_master um ON (um.user_id=rsdtl.user_id) LEFT JOIN public.ref_university ru ON (fu.university_id=ru.id and ru.survey_year=fu.survey_year) LEFT JOIN  public.ref_university_type rut ON ru.type_id=rut.id LEFT JOIN public.ref_state s on s.st_code=ru.statecode LEFT JOIN public.ref_remuneration_transaction_status rrsps on rrsps.id=rsdtl.status_id where  fu.form_id='form1' and fu.survey_year=:survey_year  and (ru.statecode =:state_code  or 'ALL'=:state_code) and ('University'=:institution_category or 'ALL'=:institution_category) and (cast(rsdtl.timestamp as date)>=:from_date or 'ALL'=:from_date) and (cast(rsdtl.timestamp as date) <=:to_date or 'ALL'=:to_date)  Union All  select s.name as state_name ,ruct.type as instituion_type,fu.form_id,'C-'||fu.college_institution_id as institution_id,clg.name as institution_name,fu.upload_date,fu.survey_year,rsdtl.form_upload_id, rrsps.name as status, rsdtl.timestamp,rsdtl.user_id,rsdtl.ip_address FROM public.remuneration_statement_detail_transaction_log rsdtl Left JOIN public.form_upload fu ON (fu.id=rsdtl.form_upload_id ) LEFT JOIN public.user_master um ON (um.user_id=rsdtl.user_id) LEFT JOIN public.college clg ON (fu.college_institution_id=clg.id and clg.survey_year=fu.survey_year) LEFT JOIN  public.ref_university_college_type ruct ON clg.type_id=ruct.id LEFT JOIN public.ref_state s on s.st_code=clg.state_code LEFT JOIN public.ref_remuneration_transaction_status rrsps on rrsps.id=rsdtl.status_id where fu.form_id='form2'  and fu.survey_year=:survey_year and (clg.state_code=:state_code  or 'ALL'=:state_code) and ('College Institution'=:institution_category or 'ALL'=:institution_category) and (cast(rsdtl.timestamp as date)>=:from_date or 'ALL'=:from_date) and (cast(rsdtl.timestamp as date) <=:to_date or 'ALL'=:to_date)  Union All  select s.name as state_name,ruct.type as instituion_type,fu.form_id,'S-'||fu.standalone_institution_id as institution_id,rsi.name as institution_name,fu.upload_date,fu.survey_year,rsdtl.form_upload_id, rrsps.name as status, rsdtl.timestamp,rsdtl.user_id,rsdtl.ip_address FROM public.remuneration_statement_detail_transaction_log rsdtl Left JOIN public.form_upload fu ON (fu.id=rsdtl.form_upload_id ) LEFT JOIN public.user_master um ON (um.user_id=rsdtl.user_id) LEFT JOIN public.ref_standalone_institution rsi ON (fu.standalone_institution_id=rsi.id and rsi.survey_year=fu.survey_year) LEFT JOIN  public.ref_state_body ruct ON rsi.statebodyid=ruct.id LEFT JOIN public.ref_state s on s.st_code=rsi.statecode LEFT JOIN public.ref_remuneration_transaction_status rrsps on rrsps.id=rsdtl.status_id where fu.form_id='form3' and fu.survey_year=:survey_year and  (rsi.statecode=:state_code  or 'ALL'=:state_code) and ('Standalone Institution'=:institution_category or 'ALL'=:institution_category) and (cast(rsdtl.timestamp as date)>=:from_date or 'ALL'=:from_date) and (cast(rsdtl.timestamp as date)<=:to_date or 'ALL'=:to_date) )  select * from rem_transaction_log   ";
    String USER_INSTITUTION_DETAILS="select um.user_id, rumr.role_id , rumr.role_name, (um.first_name||' '||um.middle_name||' '||um.last_name) as name,um.phone_landline,um.phone_mobile,um.email_id,um.alt_email_id ,case when um.aishe_code like '%C-%' then c.name when um.aishe_code like '%S-%' then si.name when um.aishe_code like '%U-%' then ru.name else null end as institution_name,um.aishe_code from user_master um left join ref_user_management_role rumr on(rumr.role_id=um.role_id) left join college c on (cast(c.id as text)=um.state_level_body_institute and um.state_level_body is not null and c.survey_year=(select max(survey_year) from form_upload where cast(college_institution_id as text)=um.state_level_body_institute and institute_type='C')) left join ref_standalone_institution si on (cast(si.id as text)=um.state_level_body_institute and um.state_level_body is null and si.survey_year=(select max(survey_year) from form_upload where cast(standalone_institution_id as text)=um.state_level_body_institute and institute_type='S')) left join ref_university ru on (ru.id=um.state_level_body and um.state_level_body_institute is null and ru.survey_year=(select max(survey_year) from form_upload where university_id=um.state_level_body and institute_type='U') ) where um.user_id=:userId and um.is_approved=1";
    String CHECK_FORM_UPLOAD_BY_USER_ID_SURVEY_YEAR="SELECT CASE WHEN UM.AISHE_CODE like '%C-%' THEN CAST(FU.ID AS TEXT) WHEN UM.AISHE_CODE like '%S-%' THEN CAST(FU1.ID AS TEXT) WHEN UM.AISHE_CODE like '%U-%' THEN CAST(FU2.ID AS TEXT) ELSE NULL END AS FORM_TYPE FROM USER_MASTER UM LEFT JOIN FORM_UPLOAD FU ON (CAST(FU.COLLEGE_INSTITUTION_ID AS text) = UM.STATE_LEVEL_BODY_INSTITUTE AND UM.STATE_LEVEL_BODY IS NOT NULL AND FU.SURVEY_YEAR = :surveyYear AND FU.INSTITUTE_TYPE = 'C' AND FU.FORM_ID = 'form2') LEFT JOIN FORM_UPLOAD FU1 ON (CAST(FU1.STANDALONE_INSTITUTION_ID AS text) = UM.STATE_LEVEL_BODY_INSTITUTE AND UM.STATE_LEVEL_BODY IS NULL AND FU1.SURVEY_YEAR = :surveyYear AND FU1.INSTITUTE_TYPE = 'S' AND FU1.FORM_ID = 'form3') LEFT JOIN FORM_UPLOAD FU2 ON (FU2.UNIVERSITY_ID = UM.STATE_LEVEL_BODY AND UM.STATE_LEVEL_BODY_INSTITUTE IS NULL AND FU2.SURVEY_YEAR = :surveyYear AND FU2.INSTITUTE_TYPE = 'U' AND FU2.FORM_ID = 'form1') WHERE UM.USER_ID = :userId AND UM.IS_APPROVED = 1";

    String CHECK_APPROVAL_STATUS_BY_USER_ID_SURVEY_YEAR="select DISTINCT form_upload_id,rsa.approver_role_id,umr.role_name,rsa.status_id,rspp.name as status_name,rsa.remarks,rsa.timestamp from remuneration_statement_approval rsa left join ref_remuneration_statement_approval_status rspp on (rspp.id=rsa.status_id) left join ref_user_management_role umr on (umr.role_id=rsa.approver_role_id) where form_upload_id=(select case when um.aishe_code like '%C-%' then fu.id when um.aishe_code like '%S-%' then fu1.id when um.aishe_code like '%U-%' then fu2.id else null end as form_id from user_master um left join form_upload fu ON (cast(fu.college_institution_id as text)=um.state_level_body_institute and um.state_level_body is not null and fu.survey_year=:surveyYear and fu.institute_type='C' and fu.form_id='form2') left join form_upload fu1 on (cast(fu1.standalone_institution_id as text)=um.state_level_body_institute and um.state_level_body is null and fu1.survey_year=:surveyYear and fu1.institute_type='S' and fu1.form_id='form3') left join form_upload fu2 on (fu2.university_id=um.state_level_body and um.state_level_body_institute is null and fu2.survey_year=:surveyYear and fu2.institute_type='U' and fu2.form_id='form1') where um.user_id=:userId and um.is_approved=1) ORDER BY rsa.approver_role_id desc";

    String CHECK_TRANSACTION_STATUS_BY_USER_ID_SURVEY_YEAR="select rsd.form_upload_id,rsd.statement_id,rsd.remarks,rsd.transaction_status_id,rts.name as transaction_status,rsd.transaction_timestamp,rsd.transaction_updater_ip_address from remuneration_statement_detail rsd left join remuneration_statement rs  on(rsd.statement_id=rs.id) left join ref_remuneration_transaction_status rts  on(rts.id=rsd.transaction_status_id) where rsd.form_upload_id=(select case when um.aishe_code like '%C-%' then fu.id when um.aishe_code like '%S-%' then fu1.id when um.aishe_code like '%U-%' then fu2.id else null end as form_id from user_master um left join form_upload fu ON (cast(fu.college_institution_id as text)=um.state_level_body_institute and um.state_level_body is not null and fu.survey_year=:surveyYear and fu.institute_type='C' and fu.form_id='form2') left join form_upload fu1 on (cast(fu1.standalone_institution_id as text)=um.state_level_body_institute and um.state_level_body is null and fu1.survey_year=:surveyYear and fu1.institute_type='S' and fu1.form_id='form3') left join form_upload fu2 on (fu2.university_id=um.state_level_body and um.state_level_body_institute is null and fu2.survey_year=:surveyYear and fu2.institute_type='U' and fu2.form_id='form1') where um.user_id=:userId and um.is_approved=1) and rs.survey_year =:surveyYear ";

    String APPROVAL_LIST_CATEGORY_WISE="SELECT MAX(CASE WHEN APPROVER_ROLE_ID = 1 OR APPROVER_ROLE_ID = 26 THEN STATUS_ID END) AS MOE_APPROVAL_STATUS_ID, MAX(CASE WHEN APPROVER_ROLE_ID = 6 THEN STATUS_ID END) AS SNO_APPROVAL_STATUS_ID, MAX(CASE WHEN APPROVER_ROLE_ID = 7 OR (APPROVER_ROLE_ID <> 6 AND APPROVER_ROLE_ID <> 1 AND APPROVER_ROLE_ID <> 26) THEN STATUS_ID END) AS UNO_APPROVAL_STATUS_ID, MAX(CASE WHEN APPROVER_ROLE_ID = 1 OR APPROVER_ROLE_ID = 26 THEN STATUS_NAME END) AS MOE_APPROVAL_STATUS_NAME, MAX(CASE WHEN APPROVER_ROLE_ID = 6 THEN STATUS_NAME END) AS SNO_APPROVAL_STATUS_NAME, MAX(CASE WHEN APPROVER_ROLE_ID = 7 OR (APPROVER_ROLE_ID <> 6 AND APPROVER_ROLE_ID <> 1 AND APPROVER_ROLE_ID <> 26) THEN STATUS_NAME END) AS UNO_APPROVAL_STATUS_NAME, MAX(CASE WHEN APPROVER_ROLE_ID = 1 OR APPROVER_ROLE_ID = 26 THEN REMARKS END) AS MOE_REMARKS, MAX(CASE WHEN APPROVER_ROLE_ID = 6 THEN REMARKS END) AS SNO_REMARKS, MAX(CASE WHEN APPROVER_ROLE_ID = 7 OR (APPROVER_ROLE_ID <> 6 AND APPROVER_ROLE_ID <> 1 AND APPROVER_ROLE_ID <> 26) THEN REMARKS END) AS UNO_REMARKS, MAX(CASE WHEN APPROVER_ROLE_ID = 1 OR APPROVER_ROLE_ID = 26 THEN TIMESTAMP END) AS MOE_TIMESTAMP, MAX(CASE WHEN APPROVER_ROLE_ID = 6 THEN TIMESTAMP END) AS SNO_TIMESTAMP, MAX(CASE WHEN APPROVER_ROLE_ID = 7 OR (APPROVER_ROLE_ID <> 6 AND APPROVER_ROLE_ID <> 1 AND APPROVER_ROLE_ID <> 26) THEN TIMESTAMP END) AS UNO_TIMESTAMP, MAX(CASE WHEN APPROVER_ROLE_ID = 1 OR APPROVER_ROLE_ID = 26 THEN APPROVER_ID END) AS MOE_APPROVER_ID, MAX(CASE WHEN APPROVER_ROLE_ID = 6 THEN APPROVER_ID END) AS SNO_APPROVER_ID, MAX(CASE WHEN APPROVER_ROLE_ID = 7 OR (APPROVER_ROLE_ID <> 6 AND APPROVER_ROLE_ID <> 1 AND APPROVER_ROLE_ID <> 26) THEN APPROVER_ID END) AS UNO_APPROVER_ID, FORM_UPLOAD_ID, STATE_NAME, INSTITUION_TYPE, FORM_ID, INSTITUTION_ID, INSTITUTION_NAME, UPLOAD_DATE, SURVEY_YEAR, NO_OF_PROGRAMME, UNIVERSITY_NAME, CONSTITUTED_FROM_COLLEGES, EMAIL_ID FROM (SELECT RSDTL.APPROVER_ROLE_ID, RRSPS.ID AS STATUS_ID, RRSPS.NAME AS STATUS_NAME, RSDTL.FORM_UPLOAD_ID, RSDTL.REMARKS, RSDTL.TIMESTAMP, RSDTL.APPROVER_ID, S.NAME AS STATE_NAME, RUT.TYPE AS INSTITUION_TYPE, FU.FORM_ID, 'U-' || RU.ID AS INSTITUTION_ID, RU.NAME AS INSTITUTION_NAME, FU.UPLOAD_DATE, FU.SURVEY_YEAR, COUNT(WUC.ID) AS NO_OF_PROGRAMME, NULL AS UNIVERSITY_NAME, U.CONSTITUTED_FROM_COLLEGES, UM.EMAIL_ID FROM REMUNERATION_STATEMENT_APPROVAL AS RSDTL LEFT JOIN PUBLIC.FORM_UPLOAD FU ON (FU.ID = RSDTL.FORM_UPLOAD_ID) LEFT JOIN PUBLIC.REF_UNIVERSITY RU ON (RU.ID = FU.UNIVERSITY_ID AND RU.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN PUBLIC.UNIVERSITY U ON (U.ID = FU.UNIVERSITY_ID AND U.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN PUBLIC.REF_UNIVERSITY_TYPE RUT ON RU.TYPE_ID = RUT.ID LEFT JOIN PUBLIC.REF_STATE S ON S.ST_CODE = RU.STATECODE LEFT JOIN PUBLIC.REF_REMUNERATION_STATEMENT_APPROVAL_STATUS RRSPS ON RRSPS.ID = RSDTL.STATUS_ID LEFT JOIN WEBDCF.UNIVERSITY_COURSE WUC ON (WUC.AISHE_CODE = FU.UNIVERSITY_ID AND WUC.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN USER_MASTER UM ON(UM.AISHE_CODE=FU.INSTITUTE_TYPE||'-'||FU.UNIVERSITY_ID AND UM.IS_APPROVED=1) WHERE FU.FORM_ID = 'form1' AND FU.SURVEY_YEAR =:survey_year AND (RU.STATECODE = :state_code OR 'ALL' = :state_code) AND (CAST(RSDTL.STATUS_ID AS TEXT) = :status_id OR 'ALL' = :status_id) AND (RU.TYPE_ID = :university_type OR 'ALL' = :university_type) AND (RU.ID = :institution_id OR 'ALL' = :institution_id) AND (CAST(RSDTL.APPROVER_ROLE_ID AS TEXT) = :approver_role_id OR 'ALL' = :approver_role_id) AND ('University' = :institution_category OR 'ALL' = :institution_category) AND (CAST(RSDTL.TIMESTAMP AS date) >= :from_date OR 'ALL' = :from_date) AND (CAST(RSDTL.TIMESTAMP AS date) <= :to_date OR 'ALL' = :to_date) AND NOT EXISTS (SELECT 1 FROM REMUNERATION_STATEMENT_DETAIL WHERE FORM_UPLOAD_ID = RSDTL.FORM_UPLOAD_ID) GROUP BY RSDTL.APPROVER_ROLE_ID, RSDTL.FORM_UPLOAD_ID, RSDTL.STATUS_ID, RSDTL.REMARKS, RSDTL.TIMESTAMP, RSDTL.APPROVER_ID, S.NAME, RUT.TYPE, FU.FORM_ID, RU.ID, RU.NAME, FU.UPLOAD_DATE, FU.SURVEY_YEAR, RRSPS.ID, U.CONSTITUTED_FROM_COLLEGES, UM.EMAIL_ID UNION ALL SELECT RSDTL.APPROVER_ROLE_ID, RRSPS.ID AS STATUS_ID, RRSPS.NAME AS STATUS_NAME, RSDTL.FORM_UPLOAD_ID, RSDTL.REMARKS, RSDTL.TIMESTAMP, RSDTL.APPROVER_ID, S.NAME AS STATE_NAME, RUCT.TYPE AS INSTITUION_TYPE, FU.FORM_ID, 'C-' || CLG.ID AS INSTITUTION_ID, CLG.NAME AS INSTITUTION_NAME, FU.UPLOAD_DATE, FU.SURVEY_YEAR, COUNT(WCC.ID) AS NO_OF_PROGRAMME, RU.NAME AS UNIVERSITY_NAME, NULL AS CONSTITUTED_FROM_COLLEGES, UM.EMAIL_ID FROM REMUNERATION_STATEMENT_APPROVAL AS RSDTL LEFT JOIN PUBLIC.FORM_UPLOAD FU ON (FU.ID = RSDTL.FORM_UPLOAD_ID) LEFT JOIN PUBLIC.COLLEGE CLG ON (FU.COLLEGE_INSTITUTION_ID = CLG.ID AND CLG.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN PUBLIC.REF_UNIVERSITY RU ON (CLG.UNIVERSITY_ID = RU.ID AND RU.SURVEY_YEAR = CLG.SURVEY_YEAR) LEFT JOIN PUBLIC.REF_UNIVERSITY_TYPE RUT ON RU.TYPE_ID = RUT.ID LEFT JOIN PUBLIC.REF_UNIVERSITY_COLLEGE_TYPE RUCT ON CLG.TYPE_ID = RUCT.ID LEFT JOIN PUBLIC.REF_STATE S ON S.ST_CODE = CLG.STATE_CODE LEFT JOIN PUBLIC.REF_REMUNERATION_STATEMENT_APPROVAL_STATUS RRSPS ON RRSPS.ID = RSDTL.STATUS_ID LEFT JOIN WEBDCF.COLLEGE_COURSE WCC ON (WCC.AISHE_CODE = FU.COLLEGE_INSTITUTION_ID \tAND WCC.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN USER_MASTER UM ON(UM.AISHE_CODE=FU.INSTITUTE_TYPE||'-'||FU.COLLEGE_INSTITUTION_ID AND UM.IS_APPROVED=1) WHERE FU.FORM_ID = 'form2' AND FU.SURVEY_YEAR= :survey_year AND (CLG.STATE_CODE = :state_code OR 'ALL' = :state_code) AND (CAST(RSDTL.STATUS_ID AS TEXT) = :status_id OR 'ALL' = :status_id) AND (RU.TYPE_ID = :university_type OR 'ALL' = :university_type) AND (CAST(CLG.TYPE_ID AS TEXT) = :college_type OR 'ALL' = :college_type) AND (CAST(CLG.ID AS TEXT) = :institution_id OR 'ALL' = :institution_id) AND (CAST(RSDTL.APPROVER_ROLE_ID AS TEXT) = :approver_role_id OR 'ALL' = :approver_role_id) AND ('College Institution' = :institution_category OR 'ALL' = :institution_category) AND (CAST(RSDTL.TIMESTAMP AS date) >= :from_date OR 'ALL' = :from_date) AND (CAST(RSDTL.TIMESTAMP AS date) <= :to_date OR 'ALL' = :to_date) AND (RU.ID = :parent_institution_id OR 'ALL' = :parent_institution_id) AND NOT EXISTS (SELECT 1 FROM REMUNERATION_STATEMENT_DETAIL WHERE FORM_UPLOAD_ID = RSDTL.FORM_UPLOAD_ID) GROUP BY RSDTL.APPROVER_ROLE_ID, RSDTL.FORM_UPLOAD_ID, RSDTL.STATUS_ID, RSDTL.REMARKS, RSDTL.TIMESTAMP, RSDTL.APPROVER_ID, S.NAME, RUCT.TYPE, FU.FORM_ID, CLG.ID, RU.ID, CLG.NAME, RU.NAME, FU.UPLOAD_DATE, FU.SURVEY_YEAR, RRSPS.ID, UM.EMAIL_ID UNION ALL SELECT RSDTL.APPROVER_ROLE_ID, RRSPS.ID AS STATUS_ID, RRSPS.NAME AS STATUS_NAME, RSDTL.FORM_UPLOAD_ID, RSDTL.REMARKS, RSDTL.TIMESTAMP, RSDTL.APPROVER_ID, S.NAME AS STATE_NAME, RUCT.TYPE AS INSTITUION_TYPE, FU.FORM_ID, 'S-' || RSI.ID AS INSTITUTION_ID, RSI.NAME AS INSTITUTION_NAME, FU.UPLOAD_DATE, FU.SURVEY_YEAR, COUNT(WSC.ID) AS NO_OF_PROGRAMME, NULL AS UNIVERSITY_NAME, NULL AS CONSTITUTED_FROM_COLLEGES, UM.EMAIL_ID FROM REMUNERATION_STATEMENT_APPROVAL AS RSDTL LEFT JOIN PUBLIC.FORM_UPLOAD FU ON (FU.ID = RSDTL.FORM_UPLOAD_ID) LEFT JOIN PUBLIC.REF_STANDALONE_INSTITUTION RSI ON (FU.STANDALONE_INSTITUTION_ID = RSI.ID AND RSI.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN PUBLIC.REF_STATE_BODY RUCT ON RSI.STATEBODYID = RUCT.ID LEFT JOIN PUBLIC.REF_STATE S ON S.ST_CODE = RSI.STATECODE LEFT JOIN PUBLIC.REF_REMUNERATION_STATEMENT_APPROVAL_STATUS RRSPS ON RRSPS.ID = RSDTL.STATUS_ID LEFT JOIN WEBDCF.STANDALONE_COURSE WSC ON (WSC.AISHE_CODE = FU.STANDALONE_INSTITUTION_ID AND WSC.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN USER_MASTER UM ON(UM.AISHE_CODE=FU.INSTITUTE_TYPE||'-'||FU.STANDALONE_INSTITUTION_ID AND UM.IS_APPROVED=1) WHERE FU.FORM_ID = 'form3' AND FU.SURVEY_YEAR =:survey_year AND (RSI.STATECODE = :state_code OR 'ALL' = :state_code) AND (CAST(RSDTL.STATUS_ID AS TEXT) = :status_id OR 'ALL' = :status_id) AND (CAST(RSDTL.APPROVER_ROLE_ID AS TEXT) = :approver_role_id OR 'ALL' = :approver_role_id) AND (CAST(RSI.ID AS TEXT) = :institution_id OR 'ALL' = :institution_id) AND ('Standalone Institution' = :institution_category OR 'ALL' = :institution_category) AND (CAST(RSI.STATEBODYID AS TEXT) = :state_body_id OR 'ALL' = :state_body_id) AND (CAST(RSDTL.TIMESTAMP AS date) >= :from_date OR 'ALL' = :from_date) AND (CAST(RSDTL.TIMESTAMP AS date) <= :to_date OR 'ALL' = :to_date) AND NOT EXISTS (SELECT 1 FROM REMUNERATION_STATEMENT_DETAIL WHERE FORM_UPLOAD_ID = RSDTL.FORM_UPLOAD_ID) GROUP BY RSDTL.APPROVER_ROLE_ID, RSDTL.FORM_UPLOAD_ID, RSDTL.STATUS_ID, RSDTL.REMARKS, RSDTL.TIMESTAMP, RSDTL.APPROVER_ID, S.NAME, RUCT.TYPE, FU.FORM_ID, RSI.ID, RSI.NAME, FU.UPLOAD_DATE, FU.SURVEY_YEAR, RRSPS.ID, UM.EMAIL_ID) AS SUBQUERY GROUP BY SUBQUERY.FORM_UPLOAD_ID, STATE_NAME, INSTITUION_TYPE, FORM_ID, INSTITUTION_ID, INSTITUTION_NAME, UPLOAD_DATE, SURVEY_YEAR, NO_OF_PROGRAMME, UNIVERSITY_NAME, CONSTITUTED_FROM_COLLEGES, EMAIL_ID ORDER  BY FORM_ID    ";

    String STATEMENT_DETAIL_WITH_TOTAL_AMOUNT="SELECT ID, RS.SURVEY_YEAR, GENERATOR_USER_ID, TIMESTAMP, COUNT(RSD.FORM_UPLOAD_ID) AS NO_OF_REMUNERATIONS, SUM(R.AMOUNT) AS TOTAL_AMOUNT FROM REMUNERATION_STATEMENT RS LEFT JOIN REMUNERATION_STATEMENT_DETAIL RSD ON RSD.STATEMENT_ID = RS.ID LEFT JOIN REMUNERATION R ON R.FORM_UPLOAD_ID = RSD.FORM_UPLOAD_ID WHERE RS.SURVEY_YEAR = :survey_year AND (RS.GENERATOR_USER_ID = :generator_user_id OR 'ALL' = :generator_user_id) AND (CAST(RS.TIMESTAMP AS date) >= :from_date OR 'ALL' = :from_date) AND (CAST(RS.TIMESTAMP AS date) <= :to_date OR 'ALL' = :to_date) GROUP BY ID ORDER BY TIMESTAMP";
    String TRANSACTION_DETAIL_STATEMENT_ID="WITH REM_TRANSACTION(STATEMENT_ID,  STATE_NAME, INSTITUION_TYPE, USER_ID, INSTITUTION_ID, INSTITUTION_NAME, UPLOAD_DATE, SURVEY_YEAR, FORM_UPLOAD_ID, TRANSACTION_TIMESTAMP, TRANSACTION_STATUS_ID, TRANSACTION_STATUS_NAME, AMOUNT, TOTAL_NUMBER_OF_PROGRAMMES, ACCOUNT_HOLDER_NAME, ACCOUNT_NUMBER, IFSC_CODE, PAN, EMAIL_ID) AS (SELECT RSDTL.STATEMENT_ID, S.NAME AS STATE_NAME, RUT.TYPE AS INSTITUION_TYPE, UM.USER_ID, 'U-' || FU.UNIVERSITY_ID AS INSTITUTION_ID, RU.NAME AS INSTITUTION_NAME, FU.UPLOAD_DATE, FU.SURVEY_YEAR, RSDTL.FORM_UPLOAD_ID, RSDTL.TRANSACTION_TIMESTAMP, RRTS.ID AS TRANSACTION_STATUS_ID, RRTS.NAME AS TRANSACTION_STATUS_NAME, R.AMOUNT, CASE WHEN R.NORM_TYPE_ID = 1 THEN RCT1.TOTAL_NUMBER_OF_PROGRAMMES ELSE RCT2.TOTAL_NUMBER_OF_PROGRAMMES END AS TOTAL_NUMBER_OF_PROGRAMMES, UA.ACCOUNT_HOLDER_NAME, UA.ACCOUNT_NUMBER, UA.IFSC_CODE, UA.PAN, UM.EMAIL_ID FROM PUBLIC.REMUNERATION_STATEMENT_DETAIL RSDTL LEFT JOIN REF_REMUNERATION_TRANSACTION_STATUS RRTS ON(RRTS.ID = RSDTL.TRANSACTION_STATUS_ID) LEFT JOIN PUBLIC.FORM_UPLOAD FU ON (FU.ID = RSDTL.FORM_UPLOAD_ID) LEFT JOIN PUBLIC.REF_UNIVERSITY RU ON (FU.UNIVERSITY_ID = RU.ID AND RU.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN PUBLIC.REF_UNIVERSITY_TYPE RUT ON RU.TYPE_ID = RUT.ID LEFT JOIN PUBLIC.REF_STATE S ON S.ST_CODE = RU.STATECODE LEFT JOIN PUBLIC.REMUNERATION R ON R.FORM_UPLOAD_ID = FU.ID LEFT JOIN PUBLIC.REMUNERATION_CRITERION_TYPE_1 RCT1 ON RCT1.FORM_UPLOAD_ID = R.FORM_UPLOAD_ID LEFT JOIN PUBLIC.REMUNERATION_CRITERION_TYPE_2 RCT2 ON RCT2.FORM_UPLOAD_ID = R.FORM_UPLOAD_ID LEFT JOIN USER_MASTER UM ON(UM.AISHE_CODE = FU.INSTITUTE_TYPE || '-' || CASE WHEN FU.UNIVERSITY_ID IS NOT NULL THEN FU.UNIVERSITY_ID WHEN FU.COLLEGE_INSTITUTION_ID IS NOT NULL THEN CAST(FU.COLLEGE_INSTITUTION_ID AS TEXT) WHEN FU.STANDALONE_INSTITUTION_ID IS NOT NULL THEN CAST(FU.STANDALONE_INSTITUTION_ID AS TEXT) ELSE NULL END AND UM.IS_APPROVED = 1) LEFT JOIN PUBLIC.USER_ACCOUNT UA ON (UA.USER_ID = UM.USER_ID AND UA.SURVEY_YEAR = FU.SURVEY_YEAR) WHERE FU.FORM_ID = 'form1' AND UM.IS_APPROVED = 1 AND UA IS NOT NULL AND FU.SURVEY_YEAR = :survey_year AND (RU.STATECODE = :state_code OR 'ALL' = :state_code) AND ('University' = :institution_category OR 'ALL' = :institution_category) AND (CAST(RSDTL.TRANSACTION_TIMESTAMP AS date) >= :from_date OR 'ALL' = :from_date) AND (CAST(RSDTL.TRANSACTION_TIMESTAMP AS date) <= :to_date OR 'ALL' = :to_date) AND (CAST(RSDTL.TRANSACTION_STATUS_ID AS TEXT) = :transaction_status_id OR 'ALL' = :transaction_status_id) AND (RSDTL.STATEMENT_ID = :statement_id OR 'ALL' = :statement_id) UNION ALL SELECT RSDTL.STATEMENT_ID, S.NAME AS STATE_NAME, RUCT.TYPE AS INSTITUION_TYPE, UM.USER_ID, 'C-' || FU.COLLEGE_INSTITUTION_ID AS INSTITUTION_ID, CLG.NAME AS INSTITUTION_NAME, FU.UPLOAD_DATE, FU.SURVEY_YEAR, RSDTL.FORM_UPLOAD_ID, RSDTL.TRANSACTION_TIMESTAMP, RRTS.ID AS TRANSACTION_STATUS_ID, RRTS.NAME AS TRANSACTION_STATUS_NAME, R.AMOUNT, CASE WHEN R.NORM_TYPE_ID = 1 THEN RCT1.TOTAL_NUMBER_OF_PROGRAMMES ELSE RCT2.TOTAL_NUMBER_OF_PROGRAMMES END AS TOTAL_NUMBER_OF_PROGRAMMES, UA.ACCOUNT_HOLDER_NAME, UA.ACCOUNT_NUMBER, UA.IFSC_CODE, UA.PAN, UM.EMAIL_ID FROM PUBLIC.REMUNERATION_STATEMENT_DETAIL RSDTL LEFT JOIN REF_REMUNERATION_TRANSACTION_STATUS RRTS ON(RRTS.ID = RSDTL.TRANSACTION_STATUS_ID) LEFT JOIN PUBLIC.FORM_UPLOAD FU ON (FU.ID = RSDTL.FORM_UPLOAD_ID) LEFT JOIN PUBLIC.COLLEGE CLG ON (FU.COLLEGE_INSTITUTION_ID = CLG.ID AND CLG.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN PUBLIC.REF_UNIVERSITY_COLLEGE_TYPE RUCT ON CLG.TYPE_ID = RUCT.ID LEFT JOIN PUBLIC.REF_STATE S ON S.ST_CODE = CLG.STATE_CODE LEFT JOIN PUBLIC.REMUNERATION R ON R.FORM_UPLOAD_ID = FU.ID LEFT JOIN PUBLIC.REMUNERATION_CRITERION_TYPE_1 RCT1 ON RCT1.FORM_UPLOAD_ID = R.FORM_UPLOAD_ID LEFT JOIN PUBLIC.REMUNERATION_CRITERION_TYPE_2 RCT2 ON RCT2.FORM_UPLOAD_ID = R.FORM_UPLOAD_ID LEFT JOIN USER_MASTER UM ON(UM.AISHE_CODE = FU.INSTITUTE_TYPE || '-' || CASE WHEN FU.UNIVERSITY_ID IS NOT NULL THEN FU.UNIVERSITY_ID WHEN FU.COLLEGE_INSTITUTION_ID IS NOT NULL THEN CAST(FU.COLLEGE_INSTITUTION_ID AS TEXT) WHEN FU.STANDALONE_INSTITUTION_ID IS NOT NULL THEN CAST(FU.STANDALONE_INSTITUTION_ID AS TEXT) ELSE NULL END AND UM.IS_APPROVED = 1) LEFT JOIN PUBLIC.USER_ACCOUNT UA ON (UA.USER_ID = UM.USER_ID AND UA.SURVEY_YEAR = FU.SURVEY_YEAR) WHERE FU.FORM_ID = 'form2' AND UM.IS_APPROVED = 1 AND UA IS NOT NULL AND FU.SURVEY_YEAR = :survey_year AND (CLG.STATE_CODE = :state_code OR 'ALL' = :state_code) AND ('College Institution' = :institution_category OR 'ALL' = :institution_category) AND (CAST(RSDTL.TRANSACTION_TIMESTAMP AS date) >= :from_date OR 'ALL' = :from_date) AND (CAST(RSDTL.TRANSACTION_TIMESTAMP AS date) <= :to_date OR 'ALL' = :to_date) AND (CAST(RSDTL.TRANSACTION_STATUS_ID AS TEXT) = :transaction_status_id OR 'ALL' = :transaction_status_id) AND (RSDTL.STATEMENT_ID = :statement_id OR 'ALL' = :statement_id) UNION ALL SELECT RSDTL.STATEMENT_ID, S.NAME AS STATE_NAME, RUCT.TYPE AS INSTITUION_TYPE, UM.USER_ID, 'S-' || FU.STANDALONE_INSTITUTION_ID AS INSTITUTION_ID, RSI.NAME AS INSTITUTION_NAME, FU.UPLOAD_DATE, FU.SURVEY_YEAR, RSDTL.FORM_UPLOAD_ID, RSDTL.TRANSACTION_TIMESTAMP, RRTS.ID AS TRANSACTION_STATUS_ID, RRTS.NAME AS TRANSACTION_STATUS_NAME, R.AMOUNT, CASE WHEN R.NORM_TYPE_ID = 1 THEN RCT1.TOTAL_NUMBER_OF_PROGRAMMES ELSE RCT2.TOTAL_NUMBER_OF_PROGRAMMES END AS TOTAL_NUMBER_OF_PROGRAMMES, UA.ACCOUNT_HOLDER_NAME, UA.ACCOUNT_NUMBER, UA.IFSC_CODE, UA.PAN, UM.EMAIL_ID FROM PUBLIC.REMUNERATION_STATEMENT_DETAIL RSDTL LEFT JOIN REF_REMUNERATION_TRANSACTION_STATUS RRTS ON(RRTS.ID = RSDTL.TRANSACTION_STATUS_ID) LEFT JOIN PUBLIC.FORM_UPLOAD FU ON (FU.ID = RSDTL.FORM_UPLOAD_ID) LEFT JOIN PUBLIC.REF_STANDALONE_INSTITUTION RSI ON (FU.STANDALONE_INSTITUTION_ID = RSI.ID AND RSI.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN PUBLIC.REF_STATE_BODY RUCT ON RSI.STATEBODYID = RUCT.ID LEFT JOIN PUBLIC.REF_STATE S ON S.ST_CODE = RSI.STATECODE LEFT JOIN PUBLIC.REMUNERATION R ON R.FORM_UPLOAD_ID = FU.ID LEFT JOIN PUBLIC.REMUNERATION_CRITERION_TYPE_1 RCT1 ON RCT1.FORM_UPLOAD_ID = R.FORM_UPLOAD_ID LEFT JOIN PUBLIC.REMUNERATION_CRITERION_TYPE_2 RCT2 ON RCT2.FORM_UPLOAD_ID = R.FORM_UPLOAD_ID LEFT JOIN USER_MASTER UM ON(UM.AISHE_CODE = FU.INSTITUTE_TYPE || '-' || CASE WHEN FU.UNIVERSITY_ID IS NOT NULL THEN FU.UNIVERSITY_ID WHEN FU.COLLEGE_INSTITUTION_ID IS NOT NULL THEN CAST(FU.COLLEGE_INSTITUTION_ID AS TEXT) WHEN FU.STANDALONE_INSTITUTION_ID IS NOT NULL THEN CAST(FU.STANDALONE_INSTITUTION_ID AS TEXT) ELSE NULL END AND UM.IS_APPROVED = 1) LEFT JOIN PUBLIC.USER_ACCOUNT UA ON (UA.USER_ID = UM.USER_ID AND UA.SURVEY_YEAR = FU.SURVEY_YEAR) WHERE FU.FORM_ID = 'form3' AND UM.IS_APPROVED = 1 AND UA IS NOT NULL AND FU.SURVEY_YEAR = :survey_year AND (RSI.STATECODE = :state_code OR 'ALL' = :state_code) AND ('Standalone Institution' = :institution_category OR 'ALL' = :institution_category) AND (CAST(RSDTL.TRANSACTION_TIMESTAMP AS date) >= :from_date OR 'ALL' = :from_date) AND (CAST(RSDTL.TRANSACTION_TIMESTAMP AS date) <= :to_date OR 'ALL' = :to_date) AND (CAST(RSDTL.TRANSACTION_STATUS_ID AS TEXT) = :transaction_status_id OR 'ALL' = :transaction_status_id) AND (RSDTL.STATEMENT_ID = :statement_id OR 'ALL' = :statement_id) ) SELECT * FROM REM_TRANSACTION  ";

    String TRANSACTION_STATUS_STATEMENT_ID_FOR_PDF="with university_basic_data as ( select fu.id as form_upload_id, fu.form_id as form_id, cast(ru.id as character varying) as university_id, ru.survey_year as survey_year, ru.name as university_or_statutory_body_name, cast(null as character varying) as college_or_standalone_institution_name, cast(rs.st_code as character varying) as state_code, rs.name as state_name, ua.account_holder_name as account_holder_name, ua.account_number account_number, ua.ifsc_code as ifsc_code, ua.updated_on as updated_on, r.amount as amount, r.norm_type_id as norm_type_id, rsd.transaction_status_id as transaction_status_id, rsd.transaction_timestamp as transaction_timestamp, rsd.remarks as remarks, rrts.name as transaction_status from form_upload as fu, ref_university as ru, ref_state as rs, user_master as um, user_account as ua, remuneration as r, remuneration_statement_detail as rsd, ref_remuneration_transaction_status as rrts where fu.form_id = 'form1' and fu.university_id = ru.id and fu.survey_year = ru.survey_year and rs.st_code = ru.statecode and fu.approver_id = um.user_id and fu.university_id = um.state_level_body and um.role_id = '7' and um.user_id = ua.user_id and fu.survey_year = ua.survey_year and fu.id = r.form_upload_id and rsd.form_upload_id = fu.id and rsd.statement_id =:statement_id and rsd.transaction_status_id = rrts.id and (cast(rrts.id as text) = :transaction_status_id or 'ALL' = :transaction_status_id) ),  college_institution_basic_data as ( select fu.id as form_upload_id, fu.form_id as form_id, cast(c.id as character varying) as college_institution_id, c.survey_year as survey_year, ru.name as university_or_statutory_body_name, c.name as college_or_standalone_institution_name, cast(rs.st_code as character varying) as state_code, rs.name as state_name, ua.account_holder_name as account_holder_name, ua.account_number account_number, ua.ifsc_code as ifsc_code, ua.updated_on as updated_on, r.amount as amount, r.norm_type_id as norm_type_id, rsd.transaction_status_id as transaction_status_id, rsd.transaction_timestamp as transaction_timestamp, rsd.remarks as remarks, rrts.name as transaction_status from form_upload as fu, college as c, ref_university as ru, ref_state as rs, user_master as um, user_account as ua, remuneration as r, remuneration_statement_detail as rsd, ref_remuneration_transaction_status as rrts where fu.form_id = 'form2' and fu.college_institution_id = c.id and fu.survey_year = c.survey_year and c.university_id = ru.id and c.survey_year = ru.survey_year and rs.st_code = c.state_code and fu.approver_id = um.user_id and cast(fu.college_institution_id as character varying) = um.state_level_body_institute and um.role_id = '12' and um.user_id = ua.user_id and fu.survey_year = ua.survey_year and fu.id = r.form_upload_id and rsd.form_upload_id = fu.id and rsd.statement_id = :statement_id and rsd.transaction_status_id = rrts.id and (cast(rrts.id as text) = :transaction_status_id or 'ALL' = :transaction_status_id) ),  standalone_institution_basic_data as ( select fu.id as form_upload_id, fu.form_id as form_id, cast(rsi.id as character varying) as standalone_institution_id, rsi.survey_year as survey_year, rsb.type as university_or_statutory_body_name, rsi.name as college_or_standalone_institution_name, cast(rs.st_code as character varying) as state_code, rs.name as state_name, ua.account_holder_name as account_holder_name, ua.account_number account_number, ua.ifsc_code as ifsc_code, ua.updated_on as updated_on, r.amount as amount, r.norm_type_id as norm_type_id, rsd.transaction_status_id as transaction_status_id, rsd.transaction_timestamp as transaction_timestamp, rsd.remarks as remarks, rrts.name as transaction_status from form_upload as fu, ref_standalone_institution as rsi, ref_state_body as rsb, ref_state as rs, user_master as um, user_account as ua, remuneration as r, remuneration_statement_detail as rsd, ref_remuneration_transaction_status as rrts where fu.form_id = 'form3' and fu.standalone_institution_id = rsi.id and fu.survey_year = rsi.survey_year and rsi.statebodyid = rsb.id and rs.st_code = rsi.statecode and fu.approver_id = um.user_id and cast(fu.standalone_institution_id as character varying) = um.state_level_body_institute and um.role_id in ('13','14','15','20','21','23','24') and um.user_id = ua.user_id and fu.survey_year = ua.survey_year and fu.id = r.form_upload_id and rsd.form_upload_id = fu.id and rsd.statement_id = :statement_id and rsd.transaction_status_id = rrts.id and (cast(rrts.id as text) = :transaction_status_id or 'ALL' = :transaction_status_id) ),  combined_data as ( select * from university_basic_data  union all  select * from college_institution_basic_data  union all  select * from standalone_institution_basic_data ),  combined_data_for_criterion_type_1 as (  select cd.*, cast(rct1.total_number_of_programmes as bigint) as total_number_of_programmes from combined_data as cd, remuneration_criterion_type_1 as rct1 where cd.form_upload_id = rct1.form_upload_id ),  combined_data_for_criterion_type_2 as (  select cd.*, cast(rct2.total_number_of_programmes as bigint) as total_number_of_programmes from combined_data as cd, remuneration_criterion_type_2 as rct2 where cd.form_upload_id = rct2.form_upload_id ),  final_result as (  select * from combined_data_for_criterion_type_1 union all select * from combined_data_for_criterion_type_2 )  select * from final_result order by state_name, university_or_statutory_body_name, college_or_standalone_institution_name, survey_year  limit :limit offset :offset ";

    String USER_INSTITUTION_DETAIL_BY_FORM_UPLOAD_ID="SELECT UM.USER_ID, RUMR.ROLE_ID, RUMR.ROLE_NAME, (UM.FIRST_NAME || ' ' || UM.MIDDLE_NAME || ' ' || UM.LAST_NAME) AS NAME, UM.PHONE_LANDLINE, UM.PHONE_MOBILE, UM.EMAIL_ID, UM.ALT_EMAIL_ID, CASE WHEN UM.AISHE_CODE like '%C-%' THEN C.NAME WHEN UM.AISHE_CODE like '%S-%' THEN SI.NAME WHEN UM.AISHE_CODE like '%U-%' THEN RU.NAME ELSE NULL END AS INSTITUTION_NAME, UM.AISHE_CODE, FU.FORM_ID, UM.APPROVED_DATETIME, FU.SURVEY_YEAR, UA.account_holder_name, UA.account_Number, UA.ifsc_code, UA.PAN, R.AMOUNT FROM FORM_UPLOAD FU LEFT JOIN USER_MASTER UM ON(UM.AISHE_CODE = FU.INSTITUTE_TYPE || '-' || CASE WHEN FU.UNIVERSITY_ID IS NOT NULL THEN FU.UNIVERSITY_ID WHEN FU.COLLEGE_INSTITUTION_ID IS NOT NULL THEN CAST(FU.COLLEGE_INSTITUTION_ID AS TEXT) WHEN FU.STANDALONE_INSTITUTION_ID IS NOT NULL THEN CAST(FU.STANDALONE_INSTITUTION_ID AS TEXT) ELSE NULL END) LEFT JOIN REF_USER_MANAGEMENT_ROLE RUMR ON(RUMR.ROLE_ID = UM.ROLE_ID) LEFT JOIN COLLEGE C ON (CAST(C.ID AS text) = UM.STATE_LEVEL_BODY_INSTITUTE AND UM.STATE_LEVEL_BODY IS NOT NULL AND C.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN REF_STANDALONE_INSTITUTION SI ON (CAST(SI.ID AS text) = UM.STATE_LEVEL_BODY_INSTITUTE AND UM.STATE_LEVEL_BODY IS NULL AND SI.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN REF_UNIVERSITY RU ON (RU.ID = UM.STATE_LEVEL_BODY AND UM.STATE_LEVEL_BODY_INSTITUTE IS NULL AND RU.SURVEY_YEAR = FU.SURVEY_YEAR) LEFT JOIN user_account UA ON (UA.user_id=UM.user_id AND UA.survey_year=FU.SURVEY_YEAR) LEFT JOIN remuneration R ON(R.form_upload_id=FU.ID) WHERE FU.ID=:formUploadId AND UM.IS_APPROVED = 1 AND UA.USER_ID IS NOT NULL ORDER BY UM.APPROVED_DATETIME DESC";
}
