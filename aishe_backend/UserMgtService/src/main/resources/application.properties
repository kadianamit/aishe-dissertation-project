#spring.application.name=user-management-service
spring.application.name=aishe-user-management-service
server.port=8995
server.servlet.context-path=/usermanagement
eureka.client.service-url.default-zone=http://localhost:8761/eureka
spring.cloud.discovery.enabled=false
#spring.servlet.multipart.max-file-size=10MB
#spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true
user.url=http://localhost:8766/auth/users/user/username
#user.url=http://localhost:80/user/user/username
#spring.cloud.discovery.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
server.tomcat.max-swallow-size=-1

# Enable prometheus exporter
#management.metrics.export.prometheus.enabled=true
spring.jackson.serialization.fail-on-empty-beans=false
#management.endpoints.web.exposure.include=
# Enable prometheus end point
#management.endpoints.web.exposure.include=prometheus,beans,health,routes,httptrace
# enable percentile-based histogram for http requests
#management.metrics.distribution.percentiles-histogram.http.server.requests=true
# http SLA histogram buckets
#management.metrics.distribution.sla.http.server.requests=100ms,150ms,250ms,500ms,1s
# enable JVM metrics
#management.metrics.enable.jvm=true
#if we are using spring jpa in boot then below configuration will be active and work
#spring.jpa.properties.hibernate.jdbc.batch_size=50
#spring.jpa.properties.hibernate.order_inserts=true
#spring.jpa.properties.hibernate.order_updates=true
#spring.jpa.properties.hibernate.batch_versioned_data=true
server.feign.client.url=demo.he.nic.in/aisheusermanagementdemo
spring.datasource.tomcat.initial-size=50
spring.datasource.tomcat.max-wait=2000
spring.datasource.tomcat.max-active=300
spring.datasource.tomcat.max-idle=150
spring.datasource.tomcat.min-idle=8

spring.datasource.url=jdbc:postgresql://postgres:5432/aishe
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
